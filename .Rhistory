theme_light()
max_date = max(res_cumulative[[2]]$dates)
max_date
ggplot(res_cumulative[[2]]) +
geom_col(aes(dates, accumulated)) +
theme_light() +
labs(x = "Date",
y = paste0("Cumulative Rainfall prior to: ", max_date))
ggplot(res_cumulative[[2]]) +
geom_col(aes(dates, accumulated)) +
theme_light() +
labs(x = "Date",
y = "Rainfall [mm]",
title = paste0("Cumulative Rainfall prior to: ", max_date))
ggplot(res_cumulative[[2]]) +
geom_col(aes(dates, accumulated)) +
theme_light() +
labs(x = "Date",
y = "Rainfall [mm]",
title = paste0("Cumulative Rainfall in Bolzano prior to: ", max_date))
poly_path = "\\\\projectdata.eurac.edu/projects/Proslide/Landslides/Iffi_db_xxxx_to_2018/exportperEurac2020/Shapefiles/IFFI10_5.shp"
spatial.obj = read_sf(poly_path)
library(sf)
spatial.obj = read_sf(poly_path)
# get only one landslide
sptial.obj = spatial.obj[1,]
unlink('doc/example_bozen_cache', recursive = TRUE)
library(rainfallR)
library(here)
library(sf)
library(dplyr)
library(tmap)
library(mapview)
library(tidyverse)
poly_path = "\\\\projectdata.eurac.edu/projects/Proslide/Landslides/Iffi_db_xxxx_to_2018/exportperEurac2020/Shapefiles/IFFI10_5.shp"
# read it with sf
spatial.obj = read_sf(poly_path)
# what have we got?
mapview::mapview(spatial.obj)
# get only one landslide
sptial.obj = spatial.obj[1,]
# what have we got?
mapview::mapview(spatial.obj)
spatial.obj
# get only one landslide
spatial.obj = spatial.obj[1,]
# what have we got?
mapview::mapview(spatial.obj)
traceback()
# what have we got?
mapview::mapview(spatial.obj)
install.packages("htmlwidgets")
install.packages("htmlwidgets")
install.packages("htmlwidgets")
library(rainfallR)
library(here)
library(sf)
library(dplyr)
library(tmap)
library(mapview)
library(tidyverse)
poly_path = "\\\\projectdata.eurac.edu/projects/Proslide/Landslides/Iffi_db_xxxx_to_2018/exportperEurac2020/Shapefiles/IFFI10_5.shp"
# read it with sf
spatial.obj = read_sf(poly_path)
# get only one landslide
spatial.obj = spatial.obj[1,]
# what have we got?
library(leaflet)
leaflet() %>%
addTiles()
# get only one landslide
spatial.obj = spatial.obj[1,]
# what have we got?
library(leaflet)
leaflet() %>%
addTiles() %>%
addPolygons(spatial.obj)
spatial.obj
leaflet(spatial.obj) %>%
addTiles() %>%
addPolygons()
# what have we got?
spatial.obj4326 = st_transform(spatial.obj, 4326)
library(leaflet)
leaflet(spatial.obj4326) %>%
addTiles() %>%
addPolygons()
res2
res_cumulative
data_path
file.edit("R/utils.R")
devtools::install()
devtools::load_all()
# get the path to the nc file
rainfallR::get_nc_paths(path_ncdf, day = as.Date("2016-01-12"), days_back = 1)
# the path to the directory of the NetCDFs which are stored for each month
path_ncdf = "\\\\projectdata.eurac.edu/projects/Proslide/PREC_GRIDS/"
# get the path to the nc file
rainfallR::get_nc_paths(path_ncdf, day = as.Date("2016-01-12"), days_back = 1)
# get the path to the nc file
path_to_nc = rainfallR::get_nc_paths(path_ncdf, day = as.Date("2016-01-12"), days_back = 1)
path_to_nc
class(path_to_nc)
# get the path to the nc file
path_to_nc = rainfallR::get_nc_paths(path_ncdf, day = as.Date("2016-01-12"), days_back = 1)[[1]]
# get the path to the nc file
class(path_to_nc)
# get the raster
precip_raster = raster(path_to_nc)
precip_raster
# get the raster
precip_raster = raster::stack(path_to_nc)
# get the right date
precip_raster = precip_raster[[12]]
plot(precip_raster)
# crop to the shape
precip_raster = raster::crop(precip_raster, spatial.obj)
plot(precip_raster)
precip_raster = raster::mask(crop, spatial.obj)
# crop to the shape
crop = raster::crop(precip_raster, spatial.obj)
cro
crop
precip_raster = raster::mask(crop, spatial.obj)
precip_raster
plot(precip_raster)
plot(spatial.obj)
# crop to the shape
crop = raster::crop(precip_raster, spatial.obj)
precip_raster = raster::mask(crop, spatial.obj)
# get the raster
precip_raster = raster::stack(path_to_nc)
# get the raster
precip_raster = raster::stack(path_to_nc)
# get the right date
precip_raster = precip_raster[[12]]
# transform the raster
crs(precip_raster) = crs(spatial.obj4326)
library(leaflet)
leaflet() %>%
addTiles() %>%
addPolygons(data = spatial.obj4326)
leaflet() %>%
addTiles() %>%
addPolygons(data = spatial.obj4326) %>%
addRasterImage(data=precip_raster)
plot(precip_raster)
leaflet() %>% addTiles() %>% addRasterImage(precip_raster)
crs(precip_raster)
# transform the raster
crs(precip_raster) = crs(spatial.obj4326)
leaflet() %>% addTiles() %>% addRasterImage(precip_raster)
# transform the
spatial.obj4326 = st_transform(spatial.obj, 3857)
leaflet() %>%
addTiles() %>%
addPolygons(data = spatial.obj4326)
spatial.obj4326 = st_transform(spatial.obj, 4326)
leaflet() %>%
addTiles() %>%
addPolygons(data = spatial.obj4326)
# transform the raster
crs(precip_raster) = sp::CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
library(leaflet)
leaflet() %>%
addTiles() %>%
addPolygons(data = spatial.obj4326) %>%
addRasterImage(data=precip_raster)
leaflet() %>%
addTiles() %>%
addPolygons(data = spatial.obj4326) %>%
addRasterImage(precip_raster)
# transform the raster
crs(precip_raster) = sp::CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
precip_raster
crs(precip_raster)
plot(precip_raster)
leaflet() %>%
addTiles() %>%
#addPolygons(data = spatial.obj4326) %>%
addRasterImage(precip_raster)
# transform the raster
crs(precip_raster) = sp::CRS("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
library(leaflet)
leaflet() %>%
addTiles() %>%
#addPolygons(data = spatial.obj4326) %>%
addRasterImage(precip_raster)
# transform the raster
crs(precip_raster) = sp::CRS(epsg3857)
sp::CRS(epsg3857)
crs(3857)
# transform the raster
precip_raster = projectRaster("+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
# transform the raster
precip_raster = projectRaster(to = "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
# transform the raster
precip_raster = projectRaster(from = csr(precip_raster), to = "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
# transform the raster
precip_raster = projectRaster(from = crs(precip_raster), to = "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
# get the raster
precip_raster = raster::stack(path_to_nc)
# get the right date
precip_raster = precip_raster_stack[[12]]
# get the raster
precip_raster_stack = raster::stack(path_to_nc)
# get the raster
precip_raster_stack = raster::stack(path_to_nc)
# get the right date
precip_raster = precip_raster_stack[[12]]
# transform the
spatial.obj4326 = st_transform(spatial.obj, 4326)
# transform the raster
precip_raster = projectRaster(precip_raster, crs=3857)
# transform the raster
precip_raster = projectRaster(precip_raster, crs="+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
leaflet() %>%
addTiles() %>%
#addPolygons(data = spatial.obj4326) %>%
addRasterImage(precip_raster)
leaflet() %>%
addTiles() %>%
addPolygons(data = spatial.obj4326) %>%
addRasterImage(precip_raster)
leaflet() %>%
addTiles() %>%
addPolygons(data = spatial.obj4326, group="shape") %>%
addRasterImage(precip_raster, group = "precip")
leaflet() %>%
addTiles() %>%
addPolygons(data = spatial.obj4326, group="shape") %>%
addRasterImage(precip_raster, group = "precip") %>%
addLayersControl(baseGroups = c("shape", "precip"))
leaflet() %>%
addTiles() %>%
addPolygons(data = spatial.obj4326, group="shape") %>%
addRasterImage(precip_raster, group = "precip") %>%
addLayersControl(overlayGroups = c("shape", "precip"))
leaflet() %>%
addTiles() %>%
addPolygons(data = spatial.obj4326, group="shape") %>%
addRasterImage(precip_raster, group = "precip") %>%
addLayersControl(overlayGroups = c("shape", "precip")) %>%
hideGroup("precip")
st_coordinates(spatial.obj4326)
st_coordinates(spatial.obj4326)[1]
leaflet() %>%
addTiles() %>%
setView(lng = st_coordinates(spatial.obj4326)[1],
lat = st_coordinates(spatial.obj4326)[2])
leaflet() %>%
addTiles() %>%
setView(lng = st_coordinates(spatial.obj4326)[1],
lat = st_coordinates(spatial.obj4326)[2],
zoom=10) %>%
addPolygons(data = spatial.obj4326, group="shape") %>%
addRasterImage(precip_raster, group = "precip") %>%
addLayersControl(overlayGroups = c("shape", "precip")) %>%
hideGroup("precip")
leaflet() %>%
addTiles() %>%
setView(lng = st_coordinates(spatial.obj4326)[2],
lat = st_coordinates(spatial.obj4326)[1],
zoom=10) %>%
addPolygons(data = spatial.obj4326, group="shape") %>%
addRasterImage(precip_raster, group = "precip") %>%
addLayersControl(overlayGroups = c("shape", "precip")) %>%
hideGroup("precip")
st_coordinates(spatial.obj4326)[2]
st_coordinates(spatial.obj4326)[1]
st_coordinates(spatial.obj4326)[[2]]
st_coordinates(spatial.obj4326)[[1]]
st_coordinates(spatial.obj4326)
st_coordinates(spatial.obj4326)$X
st_coordinates(spatial.obj4326)[,1]
st_coordinates(spatial.obj4326)[,1][[1]]
leaflet() %>%
addTiles() %>%
setView(lng = st_coordinates(spatial.obj4326)[,1][[1]],
lat = st_coordinates(spatial.obj4326)[,2][[1]],
zoom=10) %>%
addPolygons(data = spatial.obj4326, group="shape") %>%
addRasterImage(precip_raster, group = "precip") %>%
addLayersControl(overlayGroups = c("shape", "precip")) %>%
hideGroup("precip")
leaflet() %>%
addTiles() %>%
setView(lng = st_coordinates(spatial.obj4326)[,1][[1]],
lat = st_coordinates(spatial.obj4326)[,2][[1]],
zoom=6) %>%
addPolygons(data = spatial.obj4326, group="shape") %>%
addRasterImage(precip_raster, group = "precip") %>%
addLayersControl(overlayGroups = c("shape", "precip")) %>%
hideGroup("precip")
leaflet() %>%
addTiles() %>%
setView(lng = st_coordinates(spatial.obj4326)[,1][[1]],
lat = st_coordinates(spatial.obj4326)[,2][[1]],
zoom=13) %>%
addPolygons(data = spatial.obj4326, group="shape") %>%
addRasterImage(precip_raster, group = "precip") %>%
addLayersControl(overlayGroups = c("shape", "precip")) %>%
hideGroup("precip")
leaflet() %>%
addTiles() %>%
setView(lng = st_coordinates(spatial.obj4326)[,1][[1]],
lat = st_coordinates(spatial.obj4326)[,2][[1]],
zoom=15) %>%
addPolygons(data = spatial.obj4326, group="shape") %>%
addRasterImage(precip_raster, group = "precip") %>%
addLayersControl(overlayGroups = c("shape", "precip")) %>%
hideGroup("precip")
?addRasterImage
# what have we got?
pal <- colorNumeric(c("#0C2C84", "#41B6C4", "#FFFFCC"), values(precip_raster),
na.color = "transparent")
leaflet() %>%
addTiles() %>%
setView(lng = st_coordinates(spatial.obj4326)[,1][[1]],
lat = st_coordinates(spatial.obj4326)[,2][[1]],
zoom=15) %>%
addPolygons(data = spatial.obj4326, group="shape") %>%
addRasterImage(precip_raster, group = "precip", colors=üal) %>%
addLegend(pal=pal, values=values(precip_raster))
leaflet() %>%
addTiles() %>%
setView(lng = st_coordinates(spatial.obj4326)[,1][[1]],
lat = st_coordinates(spatial.obj4326)[,2][[1]],
zoom=15) %>%
addPolygons(data = spatial.obj4326, group="shape") %>%
addRasterImage(precip_raster, group = "precip", colors=pal) %>%
addLegend(pal=pal, values=values(precip_raster)) %>%
addLayersControl(overlayGroups = c("shape", "precip")) %>%
hideGroup("precip")
devtools::install()
devtools::load_all()
library(rainfallR)
devtools::document()
file.edit("NAMESPACE")
devtools::load_all()
devtools::install()
library(rainfallR)
library(here)
library(sf)
library(dplyr)
library(tmap)
library(mapview)
library(tidyverse)
library(raster)
library(leaflet)
# what have we got?
pal = colorNumeric(c("#0C2C84", "#41B6C4", "#FFFFCC"), values(precip_raster),
na.color = "transparent")
pal
poly_path = "\\\\projectdata.eurac.edu/projects/Proslide/Landslides/Iffi_db_xxxx_to_2018/exportperEurac2020/Shapefiles/IFFI10_5.shp"
# read it with sf
spatial.obj = read_sf(poly_path)
# get only one landslide
spatial.obj = spatial.obj[1,]
# get the path to the nc file
path_to_nc = rainfallR::get_nc_paths(path_ncdf, day = as.Date("2016-01-12"), days_back = 1)[[1]]
# get the raster
precip_raster_stack = raster::stack(path_to_nc)
# get the right date
precip_raster = precip_raster_stack[[12]]
# crop to the shape
crop = raster::crop(precip_raster, spatial.obj)
precip_raster = raster::mask(crop, spatial.obj)
# transform the
spatial.obj4326 = st_transform(spatial.obj, 4326)
# transform the raster
precip_raster = projectRaster(precip_raster, crs="+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
# what have we got?
pal = colorNumeric(c("#0C2C84", "#41B6C4", "#FFFFCC"), values(precip_raster),
na.color = "transparent")
values(precip_raster)
precip_raster
# get the raster
precip_raster_stack = raster::stack(path_to_nc)
values(precip_raster)
getValues(precip_raster)
precip_raster
plot(precip_raster)
# get the raster
precip_raster_stack = raster::stack(path_to_nc)
precip_raster
# get the path to the nc file
path_to_nc = rainfallR::get_nc_paths(path_ncdf, day = as.Date("2016-01-12"), days_back = 1)[[1]]
path_to_nc
# get the raster
precip_raster_stack = raster::stack(path_to_nc)
precip_raster_stack
# get the right date
precip_raster = precip_raster_stack[[12]]
# transform the
spatial.obj4326 = st_transform(spatial.obj, 4326)
# transform the raster
precip_raster = projectRaster(precip_raster, crs="+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
# transform the raster
precip_raster = projectRaster(precip_raster, crs="+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
# what have we got?
pal = colorNumeric(c("#0C2C84", "#41B6C4", "#FFFFCC"), values(precip_raster),
na.color = "transparent")
pal()
pal
leaflet() %>%
addTiles() %>%
setView(lng = st_coordinates(spatial.obj4326)[,1][[1]],
lat = st_coordinates(spatial.obj4326)[,2][[1]],
zoom=15) %>%
addPolygons(data = spatial.obj4326, group="shape") %>%
addRasterImage(precip_raster, group = "precip", colors=pal) %>%
addLegend(pal=pal, values=values(precip_raster)) %>%
addLayersControl(overlayGroups = c("shape", "precip")) %>%
hideGroup("precip")
poly_path = "\\\\projectdata.eurac.edu/projects/Proslide/Landslides/Iffi_db_xxxx_to_2018/exportperEurac2020/Shapefiles/IFFI10_5.shp"
# read it with sf
spatial.obj = read_sf(poly_path)
# get only one landslide
spatial.obj = spatial.obj[1,]
# get the path to the nc file
path_to_nc = rainfallR::get_nc_paths(path_ncdf, day = as.Date("2016-01-12"), days_back = 1)[[1]]
# get the raster
precip_raster_stack = raster::stack(path_to_nc)
# get the right date
precip_raster = precip_raster_stack[[12]]
# # crop to the shape
# crop = raster::crop(precip_raster, spatial.obj)
# precip_raster = raster::mask(crop, spatial.obj)
# transform the
spatial.obj4326 = st_transform(spatial.obj, 4326)
# transform the raster
precip_raster = projectRaster(precip_raster, crs="+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs")
# what have we got?
pal = colorNumeric(c("#0C2C84", "#41B6C4", "#FFFFCC"), values(precip_raster),
na.color = "transparent")
leaflet() %>%
addTiles() %>%
setView(lng = st_coordinates(spatial.obj4326)[,1][[1]],
lat = st_coordinates(spatial.obj4326)[,2][[1]],
zoom=15) %>%
addPolygons(data = spatial.obj4326, group="shape") %>%
addRasterImage(precip_raster, group = "precip", colors=pal) %>%
addLegend(pal=pal, values=values(precip_raster)) %>%
addLayersControl(overlayGroups = c("shape", "precip")) %>%
hideGroup("precip")
dts
res_poly = get_rainfall(spatial.obj = spatial.obj,
dts=dts, fun=mean)
res_poly
res_poly_accumulated = get_cumulative_rainfall(res_poly)
ggplot(res_poly_accumulated[[1]]) +
geom_col(aes(dates, accumulated))
devtools::load_all()
ggplot(res_poly_accumulated[[1]]) +
geom_col(aes(dates, precip))
ggplot(res_poly_accumulated[[1]]) +
geom_col(aes(dates, precip)) +
geom_col(aes(dates, accumualted), col="red")
ggplot(res_poly_accumulated[[1]]) +
geom_col(aes(dates, precip)) +
geom_col(aes(dates, accumulated), col="red")
ggplot(res_poly_accumulated[[1]]) +
geom_col(aes(dates, precip)) +
geom_col(aes(dates, accumulated), fill="red")
ggplot(res_poly_accumulated[[1]]) +
geom_col(aes(dates, precip))
ggplot(res_poly_accumulated[[1]]) +
geom_col(aes(dates, precip)) +
theme_light()
res_poly = get_rainfall(spatial.obj = spatial.obj,
dts=dts, fun=mean,
days_back = 12)
res_poly_accumulated = get_cumulative_rainfall(res_poly)
ggplot(res_poly_accumulated[[1]]) +
geom_col(aes(dates, precip)) +
theme_light()
ggplot(res_poly_accumulated[[1]]) +
geom_col(aes(dates, precip)) +
theme_light() +
labs(title="Precipitation in that landslide area before the 12th of Jan. 2016")
ggplot(res_poly_accumulated[[1]]) +
geom_col(aes(dates, precip)) +
theme_light() +
labs(title="Precipitation in that landslide area before the 12th of Jan. 2016")
devtools::build_vignettes()
pkgdown::build_site()
devtools::build_vignettes()
pkgdown::build_article()
pkgdown::build_articles()
pkgdown::build_article(name = "vignettes/example_bozen.Rmd")
pkgdown::build_article(name = "Extracting data for bozen")
pkgdown::build_site()
devtools::build_v
devtools::build_vignettes()
devtools::load_all()
browseVignettes(package = "rainfallR")
pkgdown::build_site()
devtools::build_vignettes()
devtools::load_all()
browseVignettes(package = "rainfallR")
pkgdown::build_site()
browseVignettes(package = "rainfallR")
devtools::build_vignettes()
devtools::build_vignettes()
browseVignettes(package = "rainfallR")
pkgdown::build_site()
browseVignettes("rainfallR")
devtools::load_all()
browseVignettes("rainfallR")
vignette("example_bozen")
?get_rainfall
