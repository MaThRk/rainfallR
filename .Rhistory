if(iffi){
geom = df %>% dplyr::select(iffi)
}else{
geom = df %>% dplyr::select(id)
}
geom
# a df without geom
day = df %>% st_drop_geometry()
# put the dates and the precip in one column
if(iffi){
df_long = day %>% pivot_longer(!iffi, names_to="date", values_to="precip")
}else{
df_long = day %>% pivot_longer(!id, names_to="date", values_to="precip")
}
# merge the iffi and the geom back
if(iffi){
df_long = merge(geom, df_long, by="iffi")
} else{
df_long = merge(geom, df_long, by="id")
}
df_long
df_long = df_long %>%
group_by(iffi) %>%
mutate(cumsum = cumsum(precip),
date = as.Date(date, "%Y%m%d"))
df_long
df_long$days_before_event = with(df_long, ave(seq_along(iffi), iffi, FUN = seq_along))
df_long
devtools::load_all()
rf_acc = rainfallR::make_cumulative_rainfall(rf)
rf_acc
# for each day get the rainfall at the slide location
# slides_same_day = slides_same_day[1:5]
out = vector("list", length=length(slides_same_day))
get_raster_list_n_month
for (i in seq_along(slides_same_day)) {
print(paste("I: ", i))
# get the date of the slides
dts = names(slides_same_day)[[i]] %>% as.Date(., "%Y%m%d")
# the spatial object
spatial.obj = slides_same_day[[i]]
# some other arguments
days_back = 4
seqq = FALSE
rf = rainfallR::get_rainfall(spatial.obj = spatial.obj,
dts = dts,
seqq = seqq,
days_back = days_back)
rf_acc = rainfallR::make_cumulative_rainfall(rf)
# there can only be one list element as we extract data for one day each
out[[i]] = rf_acc[[1]]
}
out
out
out[[22]]
out[[55]]
ggplot(out_long) +
geom_line(aes(x=days_before_event, y=cumsum, group=iffi)) +
scale_x_reverse() +
a = TRUE
while (a) {
i=1
if(out[[i]] == NULL){
a = FALSE
}
i = i + 1
}
ggplot(out_long) +
geom_line(aes(x=days_before_event, y=cumsum, group=iffi)) +
scale_x_reverse() +
a = TRUE
a
a = TRUE
a
while (a) {
i=1
if(is.null(out[[i]])){
a = FALSE
}
i = i + 1
}
while (a) {
i=1
print(i)
if(is.null(out[[i]])){
a = FALSE
}
i = i + 1
}
ggplot(out_long) +
geom_line(aes(x=days_before_event, y=cumsum, group=iffi)) +
scale_x_reverse() +
a = TRUE
i=1
while (a) {
print(i)
if(is.null(out[[i]])){
a = FALSE
}
i = i + 1
}
out[[34]]
out[[33]]
out[[32]]
out= out[1:32]
# write all the rows beneath each other
out_long = bind_rows(out)
out_long
ggplot(out_long) +
geom_line(aes(x=days_before_event, y=cumsum, group=iffi)) +
scale_x_reverse()
?ggrepel
ggplot(out_long) +
geom_line(aes(x=days_before_event, y=cumsum, label=iffi,group=iffi)) +
scale_x_reverse()
ggplot(out_long) +
geom_line(aes(x=days_before_event, y=cumsum,group=iffi)) +
scale_x_reverse() +
geom_text_repel()
ggplot(out_long) +
geom_line(aes(x=days_before_event, y=cumsum,group=iffi)) +
scale_x_reverse() +
geom_label_repel(aes(label=iffi))
ggplot(out_long) +
geom_line(aes(x=days_before_event, y=cumsum,group=iffi)) +
scale_x_reverse() +
geom_label_repel(aes(label=iffi, x=days_before_event, y=cumsum))
subset(out_long, group="iffi")
a = subset(out_long, group="iffi")
dim(a)
dim(out_long)
# write all the rows beneath each other
out_long = bind_rows(out)
ggplot(out_long) +
geom_line(aes(x=days_before_event, y=cumsum,group=iffi)) +
scale_x_reverse()
ggplot(out_long) +
geom_line(aes(x=days_before_event, y=cumsum,group=iffi)) +
scale_x_reverse() +
geom_label_repel(aes(label=iffi, group=iffi))
ggplot(out_long) +
geom_line(aes(x=days_before_event, y=cumsum,group=iffi)) +
scale_x_reverse() +
geom_label_repel(aes(label=iffi, x=days_before_event, y=cumsum, group=iffi))
lbls = unique(out_long$iffi)
dim(lbls)
length(lbls)
ggplot(out_long) +
geom_line(aes(x=days_before_event, y=cumsum,group=iffi)) +
scale_x_reverse() +
geom_label_repel(aes(label=lbls, x=days_before_event))
lbls = out_long %>%
group_by(iffi) %>%
summarise(iffi = dplyr::first(iffi))
lbls
ggplot(out_long) +
geom_line(aes(x=days_before_event, y=cumsum,group=iffi)) +
scale_x_reverse() +
geom_text_repel(aes(label=lbls))
ggplot(out_long) +
geom_line(aes(x=days_before_event, y=cumsum,group=iffi)) +
scale_x_reverse() +
geom_text_repel(data=lbls, aes(label=iffi))
ggplot(out_long, (aes(x=days_before_event, y=cumsum,group=iffi))) +
geom_line() +
scale_x_reverse() +
geom_text_repel(data=lbls, aes(label=iffi))
names(out_long)
ggplot(out_long, (aes(x=days_before_event, y=cumsum,group=iffi))) +
geom_line()
ggplot(out_long, (aes(x=days_before_event, y=cumsum,group=iffi))) +
geom_line() +
scale_x_reverse()
ggplot(out_long, (aes(x=days_before_event, y=cumsum,group=iffi))) +
geom_line() +
scale_x_reverse() +
geom_text_repel(data=lbls, aes(label=iffi))
lbls = out_long %>%
group_by(iffi) %>%
summarise(iffi = dplyr::first(iffi))
head(lbls)
lbls = out_long %>%
group_by(iffi, days_before_event) %>%
summarise(iffi = dplyr::first(iffi))
head(lbls)
lbls
lbls = out_long %>%
group_by(iffi) %>%
summarise(iffi = dplyr::first(iffi)) %>%
ungroup() +
mutate(days_before_event = 1)
lbls = out_long %>%
group_by(iffi) %>%
summarise(iffi = dplyr::first(iffi)) %>%
ungroup()
lbls
lbls = out_long %>%
group_by(iffi) %>%
summarise(iffi = dplyr::first(iffi)) %>%
ungroup() +
mutate(days_before_event = 1)
# write all the rows beneath each other
out_long = bind_rows(out)
lbls = out_long %>%
group_by(iffi) %>%
summarise(iffi = dplyr::first(iffi)) %>%
ungroup() +
mutate(days_before_event = 1)
lbls = out_long %>%
group_by(iffi) %>%
summarise(iffi = dplyr::first(iffi)) %>%
ungroup()
lbls
lbls = out_long %>%
group_by(iffi) %>%
summarise(iffi = dplyr::first(iffi)) %>%
ungroup() +
mutate(days_before_event = 1:nrow(.data))
lbls = out_long %>%
group_by(iffi) %>%
summarise(iffi = dplyr::first(iffi)) %>%
ungroup() +
mutate(days_before_event = "a")
lbls
lbls = out_long %>%
group_by(iffi) %>%
summarise(iffi = dplyr::first(iffi)) %>%
ungroup()
lbls$a = 1
lbls
lbls = out_long %>%
group_by(iffi) %>%
summarise(iffi = dplyr::first(iffi)) %>%
ungroup() %>%
mutate(days_before_event=1)
lbls
ggplot(out_long, (aes(x=days_before_event, y=cumsum,group=iffi))) +
geom_line() +
scale_x_reverse() +
geom_text_repel(data=lbls, aes(label=iffi))
lbls = out_long %>%
group_by(iffi) %>%
summarise(iffi = dplyr::first(iffi))
lbls
lbls = out_long %>%
group_by(iffi) %>%
mutate(iffi = dplyr::first(iffi))
lbls
lbls = out_long %>%
group_by(iffi) %>%
summarise(iffi = dplyr::first(iffi),
days_before_event = days_before_event)
lbls
lbls = out_long %>%
group_by(iffi) %>%
summarise(iffi = dplyr::first(iffi),
days_before_event = days_before_event)
lbls = out_long %>%
group_by(iffi) %>%
summarise(iffi = dplyr::first(iffi),
days_before_event = dplyr::first(days_before_event))
lbls
lbls = out_long %>%
group_by(iffi) %>%
summarise(iffi = dplyr::first(iffi),
days_before_event = dplyr::first(days_before_event),
cumsum=dplyr::first(cumsum))
lbls
ggplot(out_long, (aes(x=days_before_event, y=cumsum,group=iffi))) +
geom_line() +
scale_x_reverse() +
geom_text_repel(data=lbls, aes(label=iffi))
lbls = out_long %>%
group_by(iffi) %>%
summarise(iffi = dplyr::last(iffi),
days_before_event = dplyr::last(days_before_event),
cumsum=dplyr::last(cumsum))
ggplot(out_long, (aes(x=days_before_event, y=cumsum,group=iffi))) +
geom_line() +
scale_x_reverse() +
geom_text_repel(data=lbls, aes(label=iffi))
ggplot(out_long, (aes(x=days_before_event, y=cumsum,group=iffi))) +
geom_line() +
geom_text_repel(data=lbls, aes(label=iffi))
lbls = out_long %>%
group_by(iffi) %>%
summarise(iffi = dplyr::last(iffi),
days_before_event = dplyr::last(days_before_event),
cumsum=dplyr::last(cumsum))
lbls
count(lbls, days_before_event)
out_long %>% count(iffi, days_before_event)
out_long %>% count(iffi, days_before_event) %>% filter(n > 1)
test = out_long[1:10, ]
test
lbls = out_long %>%
group_by(iffi) %>%
summarise(iffi = dplyr::last(iffi),
days_before_event = dplyr::last(days_before_event),
cumsum=dplyr::last(cumsum))
lbls
lbls = test %>%
group_by(iffi) %>%
summarise(iffi = dplyr::last(iffi),
days_before_event = dplyr::last(days_before_event),
cumsum=dplyr::last(cumsum))
lbls
test
lbls
test
test = out_long[1:20,]
lbls = test %>%
group_by(iffi) %>%
summarise(iffi = dplyr::last(iffi),
days_before_event = dplyr::last(days_before_event),
cumsum=dplyr::last(cumsum))
lbls
test = out_long[1:40,]
lbls = test %>%
group_by(iffi) %>%
summarise(iffi = dplyr::last(iffi),
days_before_event = dplyr::last(days_before_event),
cumsum=dplyr::last(cumsum))
lbls
lbls = test %>%
group_by(iffi) %>%
summarise(iffi = dplyr::last(iffi),
days_before_event = dplyr::last(days_before_event),
cumsum=dplyr::last(cumsum))
lbls
ggplot(out_long, (aes(x=days_before_event, y=cumsum,group=iffi))) +
geom_line() +
geom_text_repel(data=lbls, aes(label=iffi))
ggplot(out_long, (aes(x=days_before_event, y=cumsum,group=iffi))) +
geom_line() +
geom_text_repel(data=lbls, aes(label=iffi)) +
scale_x_reverse()
lbls = out_long %>%
group_by(iffi) %>%
summarise(iffi = dplyr::last(iffi),
days_before_event = dplyr::last(days_before_event),
cumsum=dplyr::last(cumsum))
ggplot(out_long, (aes(x=days_before_event, y=cumsum,group=iffi))) +
geom_line() +
geom_text_repel(data=lbls, aes(label=iffi)) +
scale_x_reverse()
lbls
out_long %>% filter(iffi==900100)
View(out_long)
lbls = out_long %>%
group_by(iffi) %>%
summarise(iffi = dplyr::last(iffi),
days_before_event = dplyr::last(days_before_event),
cumsum=dplyr::last(cumsum))
ggplot(out_long, (aes(x=days_before_event, y=cumsum,group=iffi))) +
geom_line() +
geom_text_repel(data=lbls, aes(label=iffi)) +
scale_x_reverse()
ggplot(out_long, (aes(x=days_before_event, y=cumsum,group=iffi))) +
geom_line() +
scale_x_reverse()
# all must have the same frequency
ggplot(out_long) +
geom_hist(aes(x=days_before_event))
# all must have the same frequency
ggplot(out_long) +
geom_histogram(aes(x=days_before_event))
library(future)
library(sf)
library(rainfallR)
library(raster)
library(velox)
library(exactextractr)
os = Sys.info()["sysname"]
# get one raster
if(os == "Linux"){
path_ncdf = "/mnt/CEPH_PROJECTS/Proslide/PREC_GRIDS_updated/"
poly_landslide_path = "/mnt/CEPH_PROJECTS/Proslide/Landslides/Iffi_db_xxxx_to_2018/exportperEurac2020/Shapefiles/IFFI10_5.shp"
points_landslide_path = "/mnt/CEPH_PROJECTS/Proslide/Landslides/Iffi_db_xxxx_to_2018/exportperEurac2020/Shapefiles/IFFI10_1.shp"
database_dir = "/mnt/CEPH_PROJECTS/Proslide/Landslides/Iffi_db_xxxx_to_2018/exportperEurac2020/database"
su_path = "/mnt/CEPH_PROJECTS/Proslide/Envir_data/SlopeUnits/su_opt_16_TAA/su_16_TAA.shp"
}else if(os == "Windows"){
path_ncdf = "\\\\projectdata.eurac.edu/projects/Proslide/PREC_GRIDS_updated/"
poly_landslide_path = "\\\\projectdata.eurac.edu/projects/Proslide/Landslides/Iffi_db_xxxx_to_2018/exportperEurac2020/Shapefiles/IFFI10_5.shp"
points_landslide_path = "\\\\projectdata.eurac.edu/projects/Proslide/Landslides/Iffi_db_xxxx_to_2018/exportperEurac2020/Shapefiles/IFFI10_1.shp"
database_dir = "\\\\projectdata.eurac.edu/projects/Proslide/Landslides/Iffi_db_xxxx_to_2018/exportperEurac2020/database"
su_path = "\\\\projectdata.eurac.edu/projects/Proslide/Envir_data/SlopeUnits/su_opt_16_TAA/su_16_TAA.shp"
}else{
stop(call. = F, "what the hell are you working on...")
}
# get one raster ----------------------------------------------------------
year=2017
month=8
raster_path=paste0(path_ncdf,year,"/DAILYPCP_",year,formatC(month,flag=0,width=2),".nc")
#read it
r = raster(raster_path)
# get the su data ---------------------------------------------------------e
su = read_sf(su_path)
# extract the data with normal raster -------------------------------------
# start = Sys.time()
# res = raster::extract(r, su, sp=T)
# end = Sys.time()
# took = end-start
# print(took)
# extract with velox ------------------------------------------------------
# convert it to a velox object
# r_v = velox::velox(r)
# ex_v = r_v$extract(su, fun=mean)
#
# use exact extract -------------------------------------------------------
ex_ex = exact_extract(r, su, "mean")
# assign it back to the su
su$mean_precip = ex_ex
# plot to confirm
# which slope unit do we want?
idx = 30
poly = st_geometry(su)[idx,]
poly = st_transform(poly, crs(r))
# create a bounding box
buf = st_buffer(poly, dist = 10000) %>% st_as_sf()
buf = st_transform(buf, crs(r))
# crop the raster the raster values
ras_cropped = raster::crop(r, buf)
ras_maked = raster::mask(ras_cropped, buf)
plot(ras_maked)
plot(poly, col="black", add=T)
library(tidyverse)
ggplot() +
geom_sf(data=poly)
ggplot() +
geom_sf(data=poly) +
geom_raster(data=ras_maked)
library(stars)
ras_maked = raster::mask(ras_cropped, buf) %>% st_as_stars()
ggplot() +
geom_sf(data=poly) +
geom_stars(ras_maked)
ras_maked = raster::mask(ras_cropped, buf) %>% st_as_stars()
class(ras_maked)
plot(ras_maked)
plot(poly, col="black", add=T)
ggplot() +
geom_sf(data=poly) +
geom_stars(ras_maked)
ggplot() +
geom_sf(data=poly) +
geom_stars(data=ras_maked)
ggplot() +
geom_stars(data=ras_maked) +
geom_sf(data=poly)
ggplot() +
geom_stars(data=ras_maked, na.value="red") +
geom_sf(data=poly)
ggplot() +
geom_stars(data=ras_maked) +
scale_color_continuous(na.value="red") +
geom_sf(data=poly)
ggplot() +
geom_stars(data=ras_maked) +
scale_fill_continuous(na.value="red") +
geom_sf(data=poly)
ggplot() +
geom_stars(data=ras_maked) +
scale_fill_continuous(na.value="transparent") +
geom_sf(data=poly)
ggplot() +
geom_stars(data=ras_maked) +
scale_fill_continuous(na.value="transparent") +
geom_sf(data=poly, aes(col="red"))
ggplot() +
geom_stars(data=ras_maked) +
scale_fill_continuous(na.value="transparent") +
geom_sf(data=poly, aes(fill="red"))
ggplot() +
geom_stars(data=ras_maked) +
scale_fill_continuous(na.value="transparent") +
geom_sf(data=poly, fill="red")
ggplot() +
geom_stars(data=ras_maked) +
scale_fill_continuous(na.value="transparent") +
geom_sf(data=poly, fill="red", aes(col="poly"))
ggplot() +
geom_stars(data=ras_maked) +
scale_fill_continuous(na.value="transparent") +
geom_sf(data=poly, fill="red", aes(col="poly")) +
labs(
color="none"
)
ggplot() +
geom_stars(data=ras_maked) +
scale_fill_continuous(na.value="transparent") +
geom_sf(data=poly, fill="red", aes(col="poly")) +
labs(
color=""
)
ggplot() +
geom_stars(data=ras_maked) +
scale_fill_continuous(na.value="transparent") +
geom_sf(data=poly, fill="red", aes(col="polygon")) +
labs(
color=""
)
ras_masked = raster::mask(ras_cropped, buf) %>% st_as_stars()
ggplot() +
geom_stars(data=ras_masked) +
scale_fill_continuous(na.value="transparent") +
geom_sf(data=poly, fill="red", aes(col="polygon")) +
labs(
color=""
)
# get the value
su[idx, ]
